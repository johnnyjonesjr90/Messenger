@*@model IEnumerable<Messenger.Models.Message>
@model IEnumerable<Messenger.Models.MessengerUser>*@
@model ViewModel
@{
    ViewData["Title"] = "Home Page";
    var userName = User.Identity.Name;

}
@*<head>
        <link href="~/css/site.css" rel="stylesheet" />

    </head>*@

<div class="vertical-menu" style="float:left;margin-left:5%;margin-top:5%;">
    <a href="#" class="active">Home</a>
    
    @foreach (var user in Model.User.OrderBy(m => m.UserName))
    {
        //Displays link for users. Does not initiate a one on one chat yet. 
        <a href="#">@user.UserName</a>
    }
</div>

<div class="jumbotron bg-light" style="float:right;margin-top:-5%;">
    <h2 class="text-center text-primary">
        <i class="fab fa-facebook-messenger"></i>&nbsp; Messenger
    </h2>

    <div class="row">

        <div style="height:500px;width:800px;border:2px solid #ccc;overflow:auto;margin-bottom: 50px;">
            <div class="col-md-12" id="chat">
                @if (Model != null)
                {
                    @foreach (var message in Model.Messages.OrderBy(m => m.When))
                    {
                        string containerClass, timePosition, textAlign, contcolor, offset, border;
                        if (userName == message.UserName)
                        {
                            containerClass = "container darker";

                            timePosition = "time-right text-light";
                            textAlign = "text-right text-white";
                            contcolor = "bg-primary";
                            offset = "col-md-6 offset-md-6";
                            border = "border-radius:20%";
                        }
                        else
                        {
                            containerClass = "container";
                            timePosition = "time-left";
                            textAlign = "text-left";
                            contcolor = "bg-light";
                            offset = "";
                            border = "border-radius:20%";
                        }

                        <div class="row">
                            <div class="@offset">
                                <div class="@containerClass @contcolor @border">

                                    <p class="sender @textAlign">@message.UserName</p>
                                    <p class="@textAlign">@message.Text</p>
                                    <span class="@timePosition">@message.When.ToString("M/dd/yyyy hh:MM tt")</span>
                                </div>
                            </div>
                        </div>
                    }
                }
            </div>
        </div>
    </div>
    <div>


    </div>
    <div class="col-md-12">
        <form asp-action="Create"
              data-ajax-begin="clearInputField" data-ajax-complete=""
              data-ajax-failure="alert('Fail')" data-ajax-success="sendMessage"
              data-ajax="true" data-ajax-method="POST">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <input name="Text" class="form-control" id="messageText" />
            </div>
            <div class="form-group">
                <input style="background-color: black;" type="submit" value="Send" id="submitButton" class="btn btn-outline-primary btn-block" />
            </div>
            <input type="hidden" value="@userName" name="username" />
        </form>
    </div>

</div>
@if (User.Identity.IsAuthenticated)
{
    <script>
        const userName = "@ViewBag.CurrentUserName";
    </script>
}


@section scripts {
    <script src="~/signalr/signalr.min.js"></script>
    <script src="~/lib/jquery/dist/jquery.unobtrusive-ajax.min.js"></script>
    <script src="~/js/chat.js"></script>
    <script src="~/js/signalrReqHandler.js"></script>
}
